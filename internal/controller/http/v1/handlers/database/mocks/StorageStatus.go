// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// StorageStatus is an autogenerated mock type for the StorageStatus type
type StorageStatus struct {
	mock.Mock
}

type StorageStatus_Expecter struct {
	mock *mock.Mock
}

func (_m *StorageStatus) EXPECT() *StorageStatus_Expecter {
	return &StorageStatus_Expecter{mock: &_m.Mock}
}

// Ping provides a mock function with given fields:
func (_m *StorageStatus) Ping() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StorageStatus_Ping_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Ping'
type StorageStatus_Ping_Call struct {
	*mock.Call
}

// Ping is a helper method to define mock.On call
func (_e *StorageStatus_Expecter) Ping() *StorageStatus_Ping_Call {
	return &StorageStatus_Ping_Call{Call: _e.mock.On("Ping")}
}

func (_c *StorageStatus_Ping_Call) Run(run func()) *StorageStatus_Ping_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *StorageStatus_Ping_Call) Return(_a0 error) *StorageStatus_Ping_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *StorageStatus_Ping_Call) RunAndReturn(run func() error) *StorageStatus_Ping_Call {
	_c.Call.Return(run)
	return _c
}

// NewStorageStatus creates a new instance of StorageStatus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStorageStatus(t interface {
	mock.TestingT
	Cleanup(func())
}) *StorageStatus {
	mock := &StorageStatus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
